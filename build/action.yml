name: "DiligentGraphics: Build"
description: "Builds the current configuration"

inputs:
  target:
    description: Target to build (optional)
    required: false
  build-args:
    description: Additional arguments to pass to CMake build command (optional)
    required: false

runs:
  using: "composite" # must be set to "composite"

  steps:
    - name: Run CMake build
      working-directory: ${{env.DILIGENT_BUILD_DIR}}
      shell: bash
      run: |
        # CMake build
        # DILIGENT_MINGW64_BIN_DIR is set by setup-build-env
        if [[ "$DILIGENT_MINGW64_BIN_DIR" != "" ]]; then
            # Workaround for https://github.com/actions/runner-images/issues/8399
            # /mingw64/bin is always added as first entry to PATH at each build step by GitHub Actions
            # If correct mingw64 bin dir is not in the path, excutables such as RenderStatePackager will fail to run
            PATH="$DILIGENT_MINGW64_BIN_DIR:$PATH"
        fi
        # DILIGENT_BUILD_TYPE is set by configure-cmake (configure_cmake.sh)
        CMAKE_CMD="cmake --build . --config $DILIGENT_BUILD_TYPE"
        if [[ "${{inputs.target}}" != "" ]]; then
          CMAKE_CMD="$CMAKE_CMD --target ${{inputs.target}}"
        fi
        CMAKE_CMD="$CMAKE_CMD -j4" # Warning: -j seems to work same as -j1
        if [[ "${{inputs.build-args}}" != "" ]]; then
          CMAKE_CMD="$CMAKE_CMD ${{inputs.build-args}}"
        fi
        echo $CMAKE_CMD

        # Can't just use "$CMAKE_CMD" as it will split the string at spaces ignoring quotes
        # https://unix.stackexchange.com/questions/444946/how-can-we-run-a-command-stored-in-a-variable
        bash -c "$CMAKE_CMD"
