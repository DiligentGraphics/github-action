name: "DiligentGraphics: Configure CMake"
description: "Configures CMake for the build"

inputs:
  generator:
    description: CMake generator (e.g. 'Visual Studio 17 2022' or 'Ninja')
    required: false

  vs-arch:
    description: Architecture for Visual Studio Generator (x64 or Win32)
    required: false

  build-type:
    description: Build type (Debug, Release, etc.)
    required: true
  
  osx-deployment-target:
    description: Deployment target to pass to CMAKE_OSX_DEPLOYMENT_TARGET
    required: false
    default: '11'

  osx-architectures:
    description: Architectures to pass to CMAKE_OSX_ARCHITECTURES
    required: false
    default: 'arm64'

  cmake-args:
    description: Additional CMake arguments
    required: false

  cc:
    description: c compiler
    required: false

  cxx:
    description: c++ compiler
    required: false

  build-directory:
    description: Build directory
    required: false
    default: ${{ runner.workspace }}/build

runs:
  using: "composite" # must be set to "composite"

  steps:
    # Steps by default run in ${{github.workspace}} aka $GITHUB_WORKSPACE, which
    # is also the default location of the repository when using the checkout action
    # https://docs.github.com/en/actions/learn-github-actions/contexts

    - name: Generate CMake File
      if: ${{ !(endsWith(github.repository, 'Engine') || endsWith(github.repository, 'Core')) }}
      shell: bash
      run: |
        # Generate CMake File
        chmod +x "${{github.action_path}}/create_cmake.sh"
        "${{github.action_path}}/create_cmake.sh"

    - name: Configure CMake
      if: ${{ success() }}
      env:
        INPUT_VS_ARCH:               "${{ inputs.vs-arch }}"
        INPUT_BUILD_TYPE:            "${{ inputs.build-type }}"
        INPUT_OSX_DEPLOYMENT_TARGET: "${{ inputs.osx-deployment-target }}"
        INPUT_OSX_ARCHITECTURES:     "${{ inputs.osx-architectures }}"
        INPUT_CMAKE_ARGS:            "${{ inputs.cmake-args }}"
        CMAKE_GENERATOR:             "${{ inputs.generator }}"
        BUILD_DIRECTORY:             "${{ inputs.build-directory }}"
        CC:                          "${{ inputs.cc }}"
        CXX:                         "${{ inputs.cxx }}"

      shell: bash
      run: |
        # Configure CMake
        chmod +x "${{github.action_path}}/configure_cmake.sh"
        "${{github.action_path}}/configure_cmake.sh"

    - name: Verify configuration
      if: ${{ success() }}
      env:
        INPUT_GENERATOR: "${{ inputs.generator }}"
        INPUT_VS_ARCH:   "${{ inputs.vs-arch }}"

      shell: bash
      run: |
        # Verify configuration
        chmod +x "${{github.action_path}}/verify_config.sh"
        EXIT_CODE=0
        "${{github.action_path}}/verify_config.sh" || EXIT_CODE=$?
        if [[ "$EXIT_CODE" != "0" ]]; then
          echo "::error:: CMake configuration verification failed! Please examine CMake output to find mismatches."
        fi
